services:
  neighborville:
    build: .
    container_name: neighborville
    ports:
      - "80:80"
      - "443:443"
    environment:
      - NODE_ENV=production
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/nginx/ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
  
  api:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: neighborville-api
    network_mode: "host"
    env_file:
      - .env
    environment:
      - NODE_ENV=production
      - PORT=3001
      - ALLOWED_ORIGINS=https://domka.me,https://api.domka.me
      - MAILTRAP_HOST=${MAILTRAP_HOST}
      - MAILTRAP_PORT=${MAILTRAP_PORT}
      - MAILTRAP_USER=${MAILTRAP_USER}
      - MAILTRAP_PASS=${MAILTRAP_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - MONGO_URI=mongodb://localhost:27017/neighborville
      - REDIS_URI=redis://localhost:6379
      - JWT_SECRET=${JWT_SECRET}
      - COOKIE_SECRET=${COOKIE_SECRET}
    restart: unless-stopped
    depends_on:
      - mongo
      - redis

  mongo:
    image: mongo:latest
    container_name: neighborville-mongo
    network_mode: "host"
    volumes:
      - mongo-data:/data/db
    restart: unless-stopped
    environment:
      - MONGO_INITDB_DATABASE=neighborville
      
  redis:
    image: redis:alpine
    container_name: neighborville-redis
    network_mode: "host"
    volumes:
      - redis-data:/data
    restart: unless-stopped

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 30
    restart: unless-stopped

volumes:
  mongo-data:
  redis-data: